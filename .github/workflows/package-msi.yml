# This is a basic workflow to help you get started with Actions

name: Package MSI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '16'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Retrieve Project Version (Windows)
        run: |
          ./gradlew.bat -q printAppVersion
          version=$(./gradlew.bat -q printAppVersion)
          echo "VERSION_NAME=$version" >> $GITHUB_ENV
        shell: bash

      - name: Retrieve Project Version
        run: |
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew -q printAppVersion)"
        id: app_version

      - name: Get Version
        run: |
          echo "app_version=${{steps.app_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV

      - name: Print Version
        run: |
          echo "${{env.app_version}}"

      - name: Package MSI
        run: ./gradlew packageMsi

      - name: Publish msi artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}\build\compose\binaries\main\msi\XRay Importer-${{env.app_version}}.msi
          name: XRay Importer-${{env.app_version}}.msi
          #path: ${{ github.workspace }}\setup\setup.msi
          #D:\a\xray-importer\xray-importer\build\compose\binaries\main\msi\XRay Importer-1.0.0.msi
